---
title: "Sedative Heat Map NB"
author: "PO Couture"
format: html
editor: visual
---

## Heat Map Code

## Loading in the Code
```{r}
library(readxl)
Age_x_HCC_Sheet <- read_excel("Age x HCC Sheet.xlsx")
glimpse(Age_x_HCC_Sheet)
View(Age_x_HCC_Sheet)

Age_x_HCC_Sheet <- Age_x_HCC_Sheet[, !names(Age_x_HCC_Sheet) %in% c("...8", "...9")]
```

## Chronic Use % by HCC and Sex

```{r}
#|label: Complete Code Used for Analysis

# ----------------------------------------------------------
# LOAD PACKAGES
# ----------------------------------------------------------
# install.packages("lwgeom")

library(dplyr)
library(sf)
library(ggplot2)
library(ggrepel)
library(ragg)
library(lwgeom)  

# ----------------------------------------------------------
# SUMMARIZE DATA
# ----------------------------------------------------------
# --- Men ---
men_summary <- Age_x_HCC_Sheet %>%
  group_by(M_HCC) %>%
  summarise(
    Sex = "Men",
    Chronic_Use = sum(`M_Chronic_Use(total)`, na.rm = TRUE),
    Population = sum(M_Estimated_Total_Population, na.rm = TRUE),
    Chronic_Pct = 100 * Chronic_Use / Population,
    .groups = "drop"
  ) %>%
  rename(HCC = M_HCC)

# --- Women ---
women_summary <- Age_x_HCC_Sheet %>%
  group_by(W_HCC) %>%
  summarise(
    Sex = "Women",
    Chronic_Use = sum(`W_Chronic_Use(total)`, na.rm = TRUE),
    Population = sum(W_Estimated_Total_Population, na.rm = TRUE),
    Chronic_Pct = 100 * Chronic_Use / Population,
    .groups = "drop"
  ) %>%
  rename(HCC = W_HCC)

# --- Combine and total ---
df_combined <- bind_rows(men_summary, women_summary)

total_summary <- df_combined %>%
  group_by(HCC) %>%
  summarise(
    Sex = "Total",
    Chronic_Use = sum(Chronic_Use, na.rm = TRUE),
    Population = sum(Population, na.rm = TRUE),
    Chronic_Pct = 100 * Chronic_Use / Population,
    .groups = "drop"
  )

df_hcc_final <- bind_rows(df_combined, total_summary) %>%
  mutate(HCC = as.numeric(as.character(HCC)))

# ----------------------------------------------------------
# LOAD MAPS
# ----------------------------------------------------------
hcc <- st_read("https://gnb.socrata.com/api/geospatial/sdyn-7de6?method=export&format=GeoJSON", quiet = TRUE) %>%
  st_make_valid() %>%
  mutate(com = as.numeric(com))

zones <- st_read("https://gnb.socrata.com/api/geospatial/x8mg-22ju?method=export&format=GeoJSON", quiet = TRUE) %>%
  st_make_valid()

hcc_map <- hcc %>%
  left_join(df_hcc_final, by = c("com" = "HCC"))

zones_union <- st_union(st_make_valid(zones))

# ----------------------------------------------------------
# DEFINE HCCs THAT NEED ARROWS
# ----------------------------------------------------------
arrow_labels <- c(6, 14.1, 14.3, 22.1)

# ----------------------------------------------------------
# PLOT FUNCTION (smaller text, longer arrows, custom HCC6)
# ----------------------------------------------------------
plot_hcc_final <- function(data, sex_label) {
  dat_sex <- subset(data, Sex == sex_label)
  centroids <- st_point_on_surface(dat_sex)
  label_points <- cbind(centroids, st_coordinates(centroids$geometry))
  
  arrow_data <- subset(label_points, com %in% arrow_labels)
  text_data  <- subset(label_points, !(com %in% arrow_labels))
  
  hcc6_value <- arrow_data$Chronic_Pct[arrow_data$com == 6]
  
  ggplot() +
    geom_sf(data = zones_union, fill = NA, color = "grey35", linewidth = 0.8) +
    geom_sf(data = dat_sex, aes(fill = Chronic_Pct), color = "white", linewidth = 0.4) +
    
    # Normal labels (smaller)
    geom_text(
      data = text_data,
      aes(X, Y, label = paste0(round(Chronic_Pct, 1), "%")),
      color = "black",
      size = 2.8,
      fontface = "bold"
    ) +
    
    # Arrows (longer, smaller text)
    geom_text_repel(
      data = arrow_data,
      aes(X, Y, label = paste0(round(Chronic_Pct, 1), "%")),
      color = "black",
      size = 2.8,
      fontface = "bold",
      segment.color = "black",
      segment.size = 0.5,
      box.padding = 0.5,
      point.padding = 0.3,
      min.segment.length = 0,
      force = 6,
      max.overlaps = 100,
      nudge_x = 1.2,
      nudge_y = 1.2,
      arrow = arrow(length = unit(0.3, "inches"), type = "closed")
    ) +
    
    # Custom curved HCC6 leader line & label
    geom_curve(
      aes(
        x = -64.95, y = 47.35,
        xend = -64.5, yend = 47.95
      ),
      curvature = -0.25,
      color = "black",
      linewidth = 0.6,
      arrow = arrow(length = unit(0.3, "inches"))
    ) +
    geom_text(
      aes(x = -64.45, y = 48,
          label = paste0(round(hcc6_value, 1), "%")),
      color = "black",
      size = 2.8,
      fontface = "bold"
    ) +
    
    scale_fill_gradient(
      low = "#e6ccff",
      high = "#3f007d",
      name = "% Chronic Use",
      na.value = "grey90"
    ) +
    
    labs(
      title = paste("Chronic BZRA Use by Health Council (HCC) â€“", sex_label),
      subtitle = "Darker = Higher % Chronic Use",
      caption = "Data source: SIMOA + NBHC Health Councils"
    ) +
    
    theme_void(base_size = 14) +
    theme(
      legend.position = "none",
      plot.title = element_text(size = 18, face = "bold", hjust = 0.5, color = "black"),
      plot.subtitle = element_text(size = 12, hjust = 0.5, color = "black"),
      plot.caption = element_text(size = 10, hjust = 1, color = "black")
    )
}

# ----------------------------------------------------------
# CREATE MAPS
# ----------------------------------------------------------
map_men   <- plot_hcc_final(hcc_map, "Men")
map_women <- plot_hcc_final(hcc_map, "Women")
map_total <- plot_hcc_final(hcc_map, "Total")

# ----------------------------------------------------------
# EXPORT HIGH-RES MAPS
# ----------------------------------------------------------
agg_png("HCC_Map_Men.png", width = 4000, height = 3200, res = 600);   print(map_men);   dev.off()
agg_png("HCC_Map_Women.png", width = 4000, height = 3200, res = 600); print(map_women); dev.off()
agg_png("HCC_Map_Total.png", width = 4000, height = 3200, res = 600); print(map_total); dev.off()
```